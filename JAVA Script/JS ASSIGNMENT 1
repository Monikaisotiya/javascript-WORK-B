[1]What is JavaScript?

ANS:  
 >> JavaScript is a scripting language that enables you to create dynamically updating content, control multimedia, animate images, and pretty much

 >> Welcome to the MDN beginner's JavaScript course! In this article we will look at JavaScript from a high level, answering questions such as "What is it?" and "What can you do with it?", and making sure you are comfortable with JavaScript's purpose.

(1)  Prerequisites:	Basic computer literacy, a basic understanding of HTML and CSS.
(2)  Objective:	To gain familiarity with what JavaScript is, what it can do, and how it fits into a website.

EXAMPLE :
 const button = document.querySelector("button");

 button.addEventListener("click", updateName);

 function updateName() {
  const name = prompt("Enter a new name");
  button.textContent = `Player 1: ${name}`;
}

[2]  What is the use of isNaN function?

ANS:
>>isNaN() The isNaN() function determines whether a value is NaN , first converting the value to a number if necessary.

EXAMPLE:
>> JavaScript isNaN() Method - W3Schools

[3]  What is negative Infinity?

>> NEGATIVE_INFINITY is a special numeric value that is returned when an arithmetic operation or mathematical function generates a negative value greater than the largest representable number in JavaScript (i.e., more negative than -Number. MAX_VALUE) . JavaScript displays the NEGATIVE_INFINITY value as -Infinity .

>> JavaScript displays the NEGATIVE_INFINITY value as -Infinity. This value behaves mathematically like infinity; for example, anything multiplied by infinity is infinity, and anything divided by infinity is zero. In ECMAScript v1 and later, you can also use -Infinity instead of Number.NEGATIVE_INFINITY.

[4]  Which company developed JavaScript?

ANS:
>>  JavaScript was created at Netscape Communications by Brendan Eich in 1995. Netscape and Eich designed JavaScript as a scripting language for use with the company's flagship web browser, Netscape Navigator.

>>  "Netscape Communications Corporation"

>>  Who owns JavaScript officially? What is the current version ...
    2 Apr 2018
>>  Which company developed Java computer language? - Quora
19 Aug 2018
>>  Who made JavaScript? - Quora
5 Mar 2017
>>  When Javascript was initially developed, didn't the designers ...
17 Jan 2019

[5] What are undeclared and undefined variables?

ANS:
>>  Undefined: It occurs when a variable has been declared but has not been assigned any value.
    Undefined is not a keyword. 

>>   Undeclared: It occurs when we try to access any variable that is not initialized or declared 
     earlier using the var or const keyword. If we use ‘typeof’ operator to get the value
     of an undeclared variable, we will face the runtime error with the return value as
      “undefined”. The scope of the undeclared variables is always global. 

[6]  Write the code for adding new elements dynamically?

ANS:
>>document. createElement("<tagName>"); // Where <tagName> can be any HTML // tagName like div, ul, button, etc. // newDiv element has been created For Eg: let newDiv = document. createElement("div"); Once the element has been created, let's move on to the setting of attributes of the newly created element.

[7]  What is the difference between ViewState and SessionState?

ANS:
>> The basic difference between these two is that the ViewState is to manage state at the client's end, making state management easy for end-user while SessionState manages state at the server's end, making it easy to manage content from this end too. ViewState: It is maintained at only one level that is page-level.

>> the contents of a particular user's shopping cart is session data. Cookies can be used for session state. View State on the other hand is information specific to particular web page. It is stored in a hidden field so that it isn't visible to the user.

[8]  What is === operator?

ANS:
>>  Strict equality (===) - JavaScript - MDN Web Docs

>>  The strict equality ( === ) operator checks whether its two operands are equal, returning
    a Boolean result. Unlike the equality operator, the strict equality operator always 
    considers operands of different types to be different.

[9]  How can the style/class of an element be changed?

ANS:
>>  You can use the below-mentioned methods to add classes, remove classes, and toggle between
 different classes respectively.

>> (1)   The add() method: It adds one or more classes.
   (2)   The remove() method: It removes one or more classes.
   (3)   The toggle() method: If the class does not exist it adds it and returns true.

>>   Every HTML element in the Javascript DOM contains a Javascript object property called style .
     The style object contains many properties that correspond to CSS properties, so you can set properties on the style object to change element CSS styles directly.   


[10]   How to read and write a file using JavaScript?

ANS:
>>  (1)  file=fopen(getScriptPath(),0); The function fread() is used for reading the file content.
    (2)  str = fread file,flength(file) ; The function fwrite() is used to write the contents to the    file.
    (3)  file = fopen("c:\MyFile.txt", 3);// opens the file for writing.

>>  On the client side, you can't read or write files in JavaScript browsers. The fs module in Node.
    js may be used to accomplish this on the server-side. It has methods for reading and writing files on the file system that are both synchronous and asynchronous  


 [11]  What are all the looping structures in JavaScript?

 ANS:  
 >>  JavaScript supports different kinds of loops:
    (1)  for - loops through a block of code a number of times.
    (2)  for/in - loops through the properties of an object.
    (3)  for/of - loops through the values of an iterable object.
    (4)while - loops through a block of code while a specified condition is true.   

>>  There are 7 kind of loops you will find in JavaScript. We have listed them in an order that will help you to get a clear view about their working process and usage. This article will also help you to differentiate between all these 7 loops like where, when or how you should use them.  

[12]  How can you convert the string of any base to an integer in JavaScript?

ANS:
>>  In JavaScript parseInt() function (or a method) is used to convert the passed-in string parameter or value to an integer value itself. This function returns an integer of the base which is specified in the second argument of the parseInt() function.

>>  To convert a string to an integer parseInt(), Number(), and Unary operator (+) function is used in JavaScript. The parseInt() function returns NaN ( not a number) when the string doesn't contain number. If a string with a number is sent, then only that number will be returned as the output.

[13]   What is the function of the delete operator?

ANS:
>>  The delete operator removes a property from an object. If the property's value is an object and there are no more references to the object, the object held by that property is eventually released automatically.

>>  EXAMPLE:
    delete - JavaScript - MDN Web Docs - Mozilla

[14]   What are all the types of Pop up boxes available in JavaScript?

ANS:
>>  JavaScript has three kind of popup boxes:
(1) Alert box
(2) Confirm box
(3) Prompt box.

[15]   What is the use of Void (0)?

ANS:
>>  JavaScript void 0 means returning undefined (void) as a primitive value. You might come across the term “JavaScript:void(0)” while going through HTML documents. It is used to prevent any side effects caused while inserting an expression in a web page.

>>   to prevent any negative effects on a webpage when we insert some expression.

>>   example, in the case of URL hyperlinks

[16]  How can a page be forced to load another page in JavaScript?

ANS:
>> We can use window. location property inside the script tag to forcefully load another page in Javascript. It is a reference to a Location object that is it represents the current location of the document. We can change the URL of a window by accessing it

>>  In JavaScript, we can use window. location object to force a page to load another page. We can use the location object to set the URL of a new page.

[17]  What are the disadvantages of using innerHTML in JavaScript?

ANS:
>> Disadvantages of innerHTML::

>>  Event handlers attached to any DOM element are preserved.
>>  Replacement is done everywhere.
>>  It is not possible to append innerHTML.
>>  Breaks the document.
>>  Used for Cross-site Scripting.

[18]  Create password field with show hide functionalities

ANS:
>>
Create an HTML form that contains an input field of type password.
Create a checkbox that will be responsible for toggling.
Create a function that will respond to toggling when a user clicks on the checkbox

<!DOCTYPE html>
<html>
<head>
    <title>Password Field with Show/Hide</title>
</head>
<body>
    <h1>Password Field with Show/Hide</h1>
    <form>
        <label for="password">Enter Password:</label>
        <input type="password" id="password" name="password">
        <input type="checkbox" id="showPassword"> Show Password
    </form>
    
    <script>
        const passwordField = document.getElementById('password');
        const showPasswordCheckbox = document.getElementById('showPassword');

        showPasswordCheckbox.addEventListener('change', function () {
            if (showPasswordCheckbox.checked) {
                passwordField.type = 'text';
            } else {
                passwordField.type = 'password';
            }
        });
    </script>
</body>
</html>

[19]  Create basic math operation in JS

ANS:
>> <!DOCTYPE html>
<html>
<head>
</head>
<body>
    <h1>Maths Operation</h1>
    <div class="calculator">
        <div class="grid">
            <div class="grid1">
                <label for=""><b>Enter 1st number:</b></label> <br> <br> <br>
                <label for=""><b>Enter 2nd number:</b></label> <br> <br><br>
                <button onclick="calculate('add')">+</button>
                <button onclick="calculate('subtract')">-</button>
                <button onclick="calculate('multiply')">*</button>
                <button onclick="calculate('divide')">/</button>
                <button onclick="calculate('mod')">%</button>
            </div>
            <div class="grid2">
                <input type="number" id="num1" placeholder="Enter the first number"><br> <br>
                <input type="number" id="num2" placeholder="Enter the second number"><br> <br>
                <p id="result"><b>Answer is: </b></p>
            </div>
        </div>
    </div>
    <!-- script tag for java script -->
    <script>
        function calculate(operation) {
            var num1 = parseFloat(document.getElementById("num1").value);
            var num2 = parseFloat(document.getElementById("num2").value);
            var resultElement = document.getElementById("result");
            var result;
            if (isNaN(num1) || isNaN(num2)) {
                result = "Please enter valid numbers.";
            } else {
                switch (operation) {
                    case 'add':
                        result = num1 + num2;
                        break;
                    case 'subtract':
                        result = num1 - num2;
                        break;
                    case 'multiply':
                        result = num1 * num2;
                        break;
                    case 'divide':
                        if (num2 === 0) {
                            result = "Division by zero is not allowed.";
                        } else {
                            result = num1 / num2;
                        }
                    case 'mod' :
                        if (isNaN(num1) || isNaN(num2)) {
                                resultElement.textContent = "Please enter valid numbers.";
                            } else {
                                var result = num1 % num2;
                                resultElement.textContent = "Result: " + result;
                            }
                            break;
                    default:
                        result = "Invalid operation.";
                }
            }
            resultElement.textContent = "Result: " + result;
        }
    </script>
</body>
</html>



